// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static class MVC
{
    public static Tuto.Web.Controllers.AccountController Account = new Tuto.Web.Controllers.T4MVC_AccountController();
    public static Tuto.Web.Controllers.CIController CI = new Tuto.Web.Controllers.T4MVC_CIController();
    public static Tuto.Web.Controllers.DefaultController Default = new Tuto.Web.Controllers.T4MVC_DefaultController();
    public static Tuto.Web.Controllers.HelpRequestController HelpRequest = new Tuto.Web.Controllers.T4MVC_HelpRequestController();
    public static Tuto.Web.Controllers.HomeController Home = new Tuto.Web.Controllers.T4MVC_HomeController();
    public static Tuto.Web.Controllers.ManagerController Manager = new Tuto.Web.Controllers.T4MVC_ManagerController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string angular_min_js = Url("angular.min.js");
        public static readonly string jquery_1_8_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.8.2.intellisense.min.js") ? Url("jquery-1.8.2.intellisense.min.js") : Url("jquery-1.8.2.intellisense.js");
        public static readonly string jquery_1_8_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.8.2.min.js") ? Url("jquery-1.8.2.min.js") : Url("jquery-1.8.2.js");
        public static readonly string jquery_1_8_2_min_js = Url("jquery-1.8.2.min.js");
        public static readonly string jquery_ui_1_8_24_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.24.min.js") ? Url("jquery-ui-1.8.24.min.js") : Url("jquery-ui-1.8.24.js");
        public static readonly string jquery_ui_1_8_24_min_js = Url("jquery-ui-1.8.24.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string json2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json2.min.js") ? Url("json2.min.js") : Url("json2.js");
        public static readonly string knockout_2_2_0_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.0.debug.min.js") ? Url("knockout-2.2.0.debug.min.js") : Url("knockout-2.2.0.debug.js");
        public static readonly string knockout_2_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.0.min.js") ? Url("knockout-2.2.0.min.js") : Url("knockout-2.2.0.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class wuxia {
                private const string URLPATH = "~/Content/themes/wuxia";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Content/themes/wuxia/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string bootstrap_responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-responsive.min.css") ? Url("bootstrap-responsive.min.css") : Url("bootstrap-responsive.css");
                         
                    public static readonly string bootstrap_responsive_min_css = Url("bootstrap-responsive.min.css");
                    public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                         
                    public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class font {
                        private const string URLPATH = "~/Content/themes/wuxia/css/font";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string Elusive_Icons_eot = Url("Elusive-Icons.eot");
                        public static readonly string Elusive_Icons_svg = Url("Elusive-Icons.svg");
                        public static readonly string Elusive_Icons_ttf = Url("Elusive-Icons.ttf");
                        public static readonly string Elusive_Icons_woff = Url("Elusive-Icons.woff");
                        public static readonly string fontawesome_webfont_eot = Url("fontawesome-webfont.eot");
                        public static readonly string fontawesome_webfont_svg = Url("fontawesome-webfont.svg");
                        public static readonly string fontawesome_webfont_ttf = Url("fontawesome-webfont.ttf");
                        public static readonly string fontawesome_webfont_woff = Url("fontawesome-webfont.woff");
                        public static readonly string FontAwesome_otf = Url("FontAwesome.otf");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class plugins {
                        private const string URLPATH = "~/Content/themes/wuxia/css/plugins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_wysihtml5_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-wysihtml5.min.css") ? Url("bootstrap-wysihtml5.min.css") : Url("bootstrap-wysihtml5.css");
                             
                        public static readonly string jquery_datatables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datatables.min.css") ? Url("jquery.datatables.min.css") : Url("jquery.datatables.css");
                             
                        public static readonly string jquery_fullcalendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fullcalendar.min.css") ? Url("jquery.fullcalendar.min.css") : Url("jquery.fullcalendar.css");
                             
                        public static readonly string jquery_jgrowl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jgrowl.min.css") ? Url("jquery.jgrowl.min.css") : Url("jquery.jgrowl.css");
                             
                        public static readonly string jquery_jwysiwyg_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jwysiwyg.min.css") ? Url("jquery.jwysiwyg.min.css") : Url("jquery.jwysiwyg.css");
                             
                        public static readonly string jquery_plupload_queue_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.plupload.queue.min.css") ? Url("jquery.plupload.queue.min.css") : Url("jquery.plupload.queue.css");
                             
                        public static readonly string jquery_snippet_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.snippet.min.css") ? Url("jquery.snippet.min.css") : Url("jquery.snippet.css");
                             
                        public static readonly string jquery_tagsinput_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tagsinput.min.css") ? Url("jquery.tagsinput.min.css") : Url("jquery.tagsinput.css");
                             
                        public static readonly string jquery_ui_plupload_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.plupload.min.css") ? Url("jquery.ui.plupload.min.css") : Url("jquery.ui.plupload.css");
                             
                        public static readonly string jquery_visualize_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.visualize.min.css") ? Url("jquery.visualize.min.css") : Url("jquery.visualize.css");
                             
                    }
                
                    public static readonly string wuxia_blue_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wuxia-blue.min.css") ? Url("wuxia-blue.min.css") : Url("wuxia-blue.css");
                         
                    public static readonly string wuxia_dark_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wuxia-dark.min.css") ? Url("wuxia-dark.min.css") : Url("wuxia-dark.css");
                         
                    public static readonly string wuxia_green_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wuxia-green.min.css") ? Url("wuxia-green.min.css") : Url("wuxia-green.css");
                         
                    public static readonly string wuxia_orange_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wuxia-orange.min.css") ? Url("wuxia-orange.min.css") : Url("wuxia-orange.css");
                         
                    public static readonly string wuxia_purple_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wuxia-purple.min.css") ? Url("wuxia-purple.min.css") : Url("wuxia-purple.css");
                         
                    public static readonly string wuxia_red_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wuxia-red.min.css") ? Url("wuxia-red.min.css") : Url("wuxia-red.css");
                         
                }
            
                public static readonly string favicon_ico = Url("favicon.ico");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class img {
                    private const string URLPATH = "~/Content/themes/wuxia/img";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class assets {
                        private const string URLPATH = "~/Content/themes/wuxia/img/assets";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bg_content_jpg = Url("bg_content.jpg");
                        public static readonly string bg_login_png = Url("bg_login.png");
                        public static readonly string breadcrumbs_divider_png = Url("breadcrumbs_divider.png");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class icons {
                        private const string URLPATH = "~/Content/themes/wuxia/img/icons";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string emoticons_icons_png = Url("emoticons-icons.png");
                        public static readonly string famfamfam_icons_png = Url("famfamfam-icons.png");
                        public static readonly string glyphicons_halflings_white_png = Url("glyphicons-halflings-white.png");
                        public static readonly string glyphicons_halflings_png = Url("glyphicons-halflings.png");
                        public static readonly string loading_blue_gif = Url("loading_blue.gif");
                        public static readonly string loading_dark_gif = Url("loading_dark.gif");
                        public static readonly string loading_green_gif = Url("loading_green.gif");
                        public static readonly string loading_orange_gif = Url("loading_orange.gif");
                        public static readonly string loading_purple_gif = Url("loading_purple.gif");
                        public static readonly string loading_red_gif = Url("loading_red.gif");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class plugins {
                        private const string URLPATH = "~/Content/themes/wuxia/img/plugins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class colorpicker {
                            private const string URLPATH = "~/Content/themes/wuxia/img/plugins/colorpicker";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string alpha_png = Url("alpha.png");
                            public static readonly string hue_png = Url("hue.png");
                            public static readonly string saturation_png = Url("saturation.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dataTables {
                            private const string URLPATH = "~/Content/themes/wuxia/img/plugins/dataTables";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string back_disabled_png = Url("back_disabled.png");
                            public static readonly string back_enabled_png = Url("back_enabled.png");
                            public static readonly string back_enabled_hover_png = Url("back_enabled_hover.png");
                            public static readonly string forward_disabled_png = Url("forward_disabled.png");
                            public static readonly string forward_enabled_png = Url("forward_enabled.png");
                            public static readonly string forward_enabled_hover_png = Url("forward_enabled_hover.png");
                            public static readonly string sort_asc_png = Url("sort_asc.png");
                            public static readonly string sort_asc_disabled_png = Url("sort_asc_disabled.png");
                            public static readonly string sort_both_png = Url("sort_both.png");
                            public static readonly string sort_desc_png = Url("sort_desc.png");
                            public static readonly string sort_desc_disabled_png = Url("sort_desc_disabled.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class jWYSIWYG {
                            private const string URLPATH = "~/Content/themes/wuxia/img/plugins/jWYSIWYG";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ajax_loader_gif = Url("ajax-loader.gif");
                            public static readonly string jquery_wysiwyg_bg_png = Url("jquery.wysiwyg.bg.png");
                            public static readonly string jquery_wysiwyg_gif = Url("jquery.wysiwyg.gif");
                            public static readonly string jquery_wysiwyg_no_alpha_gif = Url("jquery.wysiwyg.no-alpha.gif");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class sample_content {
                        private const string URLPATH = "~/Content/themes/wuxia/img/sample_content";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string sample_image_250x150_png = Url("sample-image-250x150.png");
                        public static readonly string sample_image_350x350_png = Url("sample-image-350x350.png");
                        public static readonly string sample_image_50x50_png = Url("sample-image-50x50.png");
                    }
                
                    public static readonly string template_logo_png = Url("template_logo.png");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class js {
                    private const string URLPATH = "~/Content/themes/wuxia/js";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class bootstrap {
                        private const string URLPATH = "~/Content/themes/wuxia/js/bootstrap";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_affix_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-affix.min.js") ? Url("bootstrap-affix.min.js") : Url("bootstrap-affix.js");
                        public static readonly string bootstrap_alert_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-alert.min.js") ? Url("bootstrap-alert.min.js") : Url("bootstrap-alert.js");
                        public static readonly string bootstrap_button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-button.min.js") ? Url("bootstrap-button.min.js") : Url("bootstrap-button.js");
                        public static readonly string bootstrap_carousel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-carousel.min.js") ? Url("bootstrap-carousel.min.js") : Url("bootstrap-carousel.js");
                        public static readonly string bootstrap_collapse_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-collapse.min.js") ? Url("bootstrap-collapse.min.js") : Url("bootstrap-collapse.js");
                        public static readonly string bootstrap_dropdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-dropdown.min.js") ? Url("bootstrap-dropdown.min.js") : Url("bootstrap-dropdown.js");
                        public static readonly string bootstrap_modal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-modal.min.js") ? Url("bootstrap-modal.min.js") : Url("bootstrap-modal.js");
                        public static readonly string bootstrap_popover_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-popover.min.js") ? Url("bootstrap-popover.min.js") : Url("bootstrap-popover.js");
                        public static readonly string bootstrap_scrollspy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-scrollspy.min.js") ? Url("bootstrap-scrollspy.min.js") : Url("bootstrap-scrollspy.js");
                        public static readonly string bootstrap_tab_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-tab.min.js") ? Url("bootstrap-tab.min.js") : Url("bootstrap-tab.js");
                        public static readonly string bootstrap_tooltip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-tooltip.min.js") ? Url("bootstrap-tooltip.min.js") : Url("bootstrap-tooltip.js");
                        public static readonly string bootstrap_transition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-transition.min.js") ? Url("bootstrap-transition.min.js") : Url("bootstrap-transition.js");
                        public static readonly string bootstrap_typeahead_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-typeahead.min.js") ? Url("bootstrap-typeahead.min.js") : Url("bootstrap-typeahead.js");
                        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class libs {
                        private const string URLPATH = "~/Content/themes/wuxia/js/libs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                        public static readonly string modernizr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr.min.js") ? Url("modernizr.min.js") : Url("modernizr.js");
                        public static readonly string selectivizr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectivizr.min.js") ? Url("selectivizr.min.js") : Url("selectivizr.js");
                    }
                
                    public static readonly string navigation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/navigation.min.js") ? Url("navigation.min.js") : Url("navigation.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class plugins {
                        private const string URLPATH = "~/Content/themes/wuxia/js/plugins";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class colorpicker {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/colorpicker";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bootstrap_colorpicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-colorpicker.min.js") ? Url("bootstrap-colorpicker.min.js") : Url("bootstrap-colorpicker.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dataTables {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/dataTables";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string jquery_datatables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.datatables.min.js") ? Url("jquery.datatables.min.js") : Url("jquery.datatables.js");
                            public static readonly string jquery_datatables_min_js = Url("jquery.datatables.min.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class datepicker {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/datepicker";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bootstrap_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datepicker.min.js") ? Url("bootstrap-datepicker.min.js") : Url("bootstrap-datepicker.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class fileupload {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/fileupload";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bootstrap_fileupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-fileupload.min.js") ? Url("bootstrap-fileupload.min.js") : Url("bootstrap-fileupload.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class flot {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/flot";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string excanvas_min_js = Url("excanvas.min.js");
                            public static readonly string jquery_flot_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.min.js") ? Url("jquery.flot.min.js") : Url("jquery.flot.js");
                            public static readonly string jquery_flot_pie_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.flot.pie.min.js") ? Url("jquery.flot.pie.min.js") : Url("jquery.flot.pie.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class fullCalendar {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/fullCalendar";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string gcal_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gcal.min.js") ? Url("gcal.min.js") : Url("gcal.js");
                            public static readonly string jquery_fullcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.fullcalendar.min.js") ? Url("jquery.fullcalendar.min.js") : Url("jquery.fullcalendar.js");
                            public static readonly string jquery_fullcalendar_min_js = Url("jquery.fullcalendar.min.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class inputmask {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/inputmask";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bootstrap_inputmask_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-inputmask.min.js") ? Url("bootstrap-inputmask.min.js") : Url("bootstrap-inputmask.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class jGrowl {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/jGrowl";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string jquery_jgrowl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.jgrowl.min.js") ? Url("jquery.jgrowl.min.js") : Url("jquery.jgrowl.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class jWYSIWYG {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/jWYSIWYG";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class controls {
                                private const string URLPATH = "~/Content/themes/wuxia/js/plugins/jWYSIWYG/controls";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                                public static readonly string wysiwyg_colorpicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wysiwyg.colorpicker.min.js") ? Url("wysiwyg.colorpicker.min.js") : Url("wysiwyg.colorpicker.js");
                                public static readonly string wysiwyg_cssWrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wysiwyg.cssWrap.min.js") ? Url("wysiwyg.cssWrap.min.js") : Url("wysiwyg.cssWrap.js");
                                public static readonly string wysiwyg_image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wysiwyg.image.min.js") ? Url("wysiwyg.image.min.js") : Url("wysiwyg.image.js");
                                public static readonly string wysiwyg_link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wysiwyg.link.min.js") ? Url("wysiwyg.link.min.js") : Url("wysiwyg.link.js");
                                public static readonly string wysiwyg_table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wysiwyg.table.min.js") ? Url("wysiwyg.table.min.js") : Url("wysiwyg.table.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class dialogs {
                                private const string URLPATH = "~/Content/themes/wuxia/js/plugins/jWYSIWYG/dialogs";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string default_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.css") ? Url("default.min.css") : Url("default.css");
                                     
                                public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                            }
                        
                            public static readonly string jquery_wysiwyg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.wysiwyg.min.js") ? Url("jquery.wysiwyg.min.js") : Url("jquery.wysiwyg.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class plUpload {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/plUpload";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class i18n {
                                private const string URLPATH = "~/Content/themes/wuxia/js/plugins/plUpload/i18n";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                                public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                                public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                                public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                                public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                                public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                                public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                                public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                                public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                                public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                                public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                                public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                                public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                                public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                                public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                                public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                                public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                                public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                                public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                                public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                                public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                                public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                                public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class jquery_plupload_queue {
                                private const string URLPATH = "~/Content/themes/wuxia/js/plugins/plUpload/jquery.plupload.queue";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class img {
                                    private const string URLPATH = "~/Content/themes/wuxia/js/plugins/plUpload/jquery.plupload.queue/img";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string backgrounds_gif = Url("backgrounds.gif");
                                    public static readonly string buttons_disabled_png = Url("buttons-disabled.png");
                                    public static readonly string buttons_png = Url("buttons.png");
                                    public static readonly string delete_gif = Url("delete.gif");
                                    public static readonly string done_gif = Url("done.gif");
                                    public static readonly string error_gif = Url("error.gif");
                                    public static readonly string throbber_gif = Url("throbber.gif");
                                    public static readonly string transp50_png = Url("transp50.png");
                                }
                            
                                public static readonly string jquery_plupload_queue_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.plupload.queue.min.js") ? Url("jquery.plupload.queue.min.js") : Url("jquery.plupload.queue.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class jquery_ui_plupload {
                                private const string URLPATH = "~/Content/themes/wuxia/js/plugins/plUpload/jquery.ui.plupload";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string jquery_ui_plupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.plupload.min.js") ? Url("jquery.ui.plupload.min.js") : Url("jquery.ui.plupload.js");
                            }
                        
                            public static readonly string plupload_browserplus_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plupload.browserplus.min.js") ? Url("plupload.browserplus.min.js") : Url("plupload.browserplus.js");
                            public static readonly string plupload_flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plupload.flash.min.js") ? Url("plupload.flash.min.js") : Url("plupload.flash.js");
                            public static readonly string plupload_flash_swf = Url("plupload.flash.swf");
                            public static readonly string plupload_full_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plupload.full.min.js") ? Url("plupload.full.min.js") : Url("plupload.full.js");
                            public static readonly string plupload_gears_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plupload.gears.min.js") ? Url("plupload.gears.min.js") : Url("plupload.gears.js");
                            public static readonly string plupload_html4_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plupload.html4.min.js") ? Url("plupload.html4.min.js") : Url("plupload.html4.js");
                            public static readonly string plupload_html5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plupload.html5.min.js") ? Url("plupload.html5.min.js") : Url("plupload.html5.js");
                            public static readonly string plupload_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plupload.min.js") ? Url("plupload.min.js") : Url("plupload.js");
                            public static readonly string plupload_silverlight_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plupload.silverlight.min.js") ? Url("plupload.silverlight.min.js") : Url("plupload.silverlight.js");
                            public static readonly string plupload_silverlight_xap = Url("plupload.silverlight.xap");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class smartWizard {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/smartWizard";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string jquery_smartWizard_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.smartWizard-2.0.min.js") ? Url("jquery.smartWizard-2.0.min.js") : Url("jquery.smartWizard-2.0.js");
                            public static readonly string jquery_smartWizard_2_0_min_js = Url("jquery.smartWizard-2.0.min.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class snippet {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/snippet";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string jquery_snippet_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.snippet.min.js") ? Url("jquery.snippet.min.js") : Url("jquery.snippet.js");
                            public static readonly string jquery_snippet_min_js = Url("jquery.snippet.min.js");
                            public static readonly string ZeroClipboard_swf = Url("ZeroClipboard.swf");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class tagsInput {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/tagsInput";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string jquery_tagsinput_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tagsinput.min.js") ? Url("jquery.tagsinput.min.js") : Url("jquery.tagsinput.js");
                            public static readonly string jquery_tagsinput_min_js = Url("jquery.tagsinput.min.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class visualize {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/visualize";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string excanvas_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/excanvas.min.js") ? Url("excanvas.min.js") : Url("excanvas.js");
                            public static readonly string jquery_visualize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.visualize.min.js") ? Url("jquery.visualize.min.js") : Url("jquery.visualize.js");
                            public static readonly string jquery_visualize_min_js = Url("jquery.visualize.min.js");
                            public static readonly string jquery_visualize_tooltip_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.visualize.tooltip.min.js") ? Url("jquery.visualize.tooltip.min.js") : Url("jquery.visualize.tooltip.js");
                            public static readonly string jquery_visualize_tooltip_min_js = Url("jquery.visualize.tooltip.min.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class wysihtml5 {
                            private const string URLPATH = "~/Content/themes/wuxia/js/plugins/wysihtml5";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string bootstrap_wysihtml5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-wysihtml5.min.js") ? Url("bootstrap-wysihtml5.min.js") : Url("bootstrap-wysihtml5.js");
                            public static readonly string wysihtml5_0_3_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wysihtml5-0.3.0.min.js") ? Url("wysihtml5-0.3.0.min.js") : Url("wysihtml5-0.3.0.js");
                            public static readonly string wysihtml5_0_3_0_min_js = Url("wysihtml5-0.3.0.min.js");
                        }
                    
                    }
                
                }
            
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class weekcalendar {
            private const string URLPATH = "~/Content/weekcalendar";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_weekcalendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.weekcalendar.min.css") ? Url("jquery.weekcalendar.min.css") : Url("jquery.weekcalendar.css");
                 
            public static readonly string jquery_weekcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.weekcalendar.min.js") ? Url("jquery.weekcalendar.min.js") : Url("jquery.weekcalendar.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class libs {
                private const string URLPATH = "~/Content/weekcalendar/libs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Content/weekcalendar/libs/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class smoothness {
                        private const string URLPATH = "~/Content/weekcalendar/libs/css/smoothness";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/weekcalendar/libs/css/smoothness/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                            public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                            public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                            public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                            public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                            public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                            public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                            public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                            public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                            public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                            public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                            public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                            public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                        }
                    
                        public static readonly string jquery_ui_1_8_11_custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.11.custom.min.css") ? Url("jquery-ui-1.8.11.custom.min.css") : Url("jquery-ui-1.8.11.custom.css");
                             
                    }
                
                }
            
                public static readonly string date_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/date.min.js") ? Url("date.min.js") : Url("date.js");
                public static readonly string jquery_1_4_4_min_js = Url("jquery-1.4.4.min.js");
                public static readonly string jquery_ui_1_8_11_custom_min_js = Url("jquery-ui-1.8.11.custom.min.js");
                public static readonly string jquery_ui_1_8_4_custom_min_js = Url("jquery-ui-1.8.4.custom.min.js");
                public static readonly string jquery_ui_i18n_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-i18n.min.js") ? Url("jquery-ui-i18n.min.js") : Url("jquery-ui-i18n.js");
                public static readonly string json2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/json2.min.js") ? Url("json2.min.js") : Url("json2.js");
                public static readonly string moment_min_js = Url("moment.min.js");
            }
        
            public static readonly string weekcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/weekcalendar.min.js") ? Url("weekcalendar.min.js") : Url("weekcalendar.js");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591


